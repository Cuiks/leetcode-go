package main

import (
	"fmt"
	"strconv"
	"strings"
)

func restoreIpAddresses(s string) []string {
	result := make([]string, 0)
	list := make([]string, 0)
	backtrack(s, 0, list, &result)
	return result
}

func backtrack(s string, pos int, list []string, result *[]string) {
	if pos == len(s) || len(list) >= 4 {
		if len(strings.Join(list, "")) == len(s) && len(list) == 4 {
			*result = append(*result, strings.Join(list, "."))
		}
		return
	}
	for i := pos; i < len(s); i++ {
		str := s[pos : i+1]
		if validValue(str) {
			list = append(list, str)
			backtrack(s, i+1, list, result)
			list = list[:len(list)-1]
		}
	}
}

func validValue(str string) bool {
	if str[0] == '0' {
		if len(str) > 1 {
			return false
		} else {
			return true
		}
	}
	v, _ := strconv.Atoi(str)
	if 0 <= v && v <= 255 {
		return true
	}
	return false
}

func main() {
	fmt.Println(restoreIpAddresses
}
